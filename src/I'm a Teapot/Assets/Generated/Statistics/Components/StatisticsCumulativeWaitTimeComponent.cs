//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class StatisticsContext {

    public StatisticsEntity cumulativeWaitTimeEntity { get { return GetGroup(StatisticsMatcher.CumulativeWaitTime).GetSingleEntity(); } }
    public CumulativeWaitTime cumulativeWaitTime { get { return cumulativeWaitTimeEntity.cumulativeWaitTime; } }
    public bool hasCumulativeWaitTime { get { return cumulativeWaitTimeEntity != null; } }

    public StatisticsEntity SetCumulativeWaitTime(float newValue) {
        if (hasCumulativeWaitTime) {
            throw new Entitas.EntitasException("Could not set CumulativeWaitTime!\n" + this + " already has an entity with CumulativeWaitTime!",
                "You should check if the context already has a cumulativeWaitTimeEntity before setting it or use context.ReplaceCumulativeWaitTime().");
        }
        var entity = CreateEntity();
        entity.AddCumulativeWaitTime(newValue);
        return entity;
    }

    public void ReplaceCumulativeWaitTime(float newValue) {
        var entity = cumulativeWaitTimeEntity;
        if (entity == null) {
            entity = SetCumulativeWaitTime(newValue);
        } else {
            entity.ReplaceCumulativeWaitTime(newValue);
        }
    }

    public void RemoveCumulativeWaitTime() {
        cumulativeWaitTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class StatisticsEntity {

    public CumulativeWaitTime cumulativeWaitTime { get { return (CumulativeWaitTime)GetComponent(StatisticsComponentsLookup.CumulativeWaitTime); } }
    public bool hasCumulativeWaitTime { get { return HasComponent(StatisticsComponentsLookup.CumulativeWaitTime); } }

    public void AddCumulativeWaitTime(float newValue) {
        var index = StatisticsComponentsLookup.CumulativeWaitTime;
        var component = (CumulativeWaitTime)CreateComponent(index, typeof(CumulativeWaitTime));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCumulativeWaitTime(float newValue) {
        var index = StatisticsComponentsLookup.CumulativeWaitTime;
        var component = (CumulativeWaitTime)CreateComponent(index, typeof(CumulativeWaitTime));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCumulativeWaitTime() {
        RemoveComponent(StatisticsComponentsLookup.CumulativeWaitTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class StatisticsMatcher {

    static Entitas.IMatcher<StatisticsEntity> _matcherCumulativeWaitTime;

    public static Entitas.IMatcher<StatisticsEntity> CumulativeWaitTime {
        get {
            if (_matcherCumulativeWaitTime == null) {
                var matcher = (Entitas.Matcher<StatisticsEntity>)Entitas.Matcher<StatisticsEntity>.AllOf(StatisticsComponentsLookup.CumulativeWaitTime);
                matcher.componentNames = StatisticsComponentsLookup.componentNames;
                _matcherCumulativeWaitTime = matcher;
            }

            return _matcherCumulativeWaitTime;
        }
    }
}
